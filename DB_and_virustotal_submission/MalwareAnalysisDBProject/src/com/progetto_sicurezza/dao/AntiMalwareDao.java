package com.progetto_sicurezza.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import com.progetto_sicurezza.dbconfig.DBConfiguration;
import com.progetto_sicurezza.model.AntiMalware;

public class AntiMalwareDao
{
	/*
	 * antimalware: tutti i campi di antimalware possono essere null tranne:
	 * nome
	 */
	public int insert(AntiMalware antimalware) throws SQLException
	{
		// controlli:
		// riferimento not null
		// vincoli sui campi not null
		if(antimalware == null || antimalware.getNome() == null) throw new IllegalArgumentException();

		Connection dbCon = DriverManager.getConnection(DBConfiguration.DB_URL,DBConfiguration.USERNAME,DBConfiguration.PASSWORD);
		PreparedStatement stmt;
        
        String insert = "INSERT INTO anti_malware(nome,software_house,version) " +
                        "VALUES (?,?,?);";
        
        System.out.println(insert);
        
        stmt =  dbCon.prepareStatement(insert,Statement.RETURN_GENERATED_KEYS);		
		stmt.setString(1, antimalware.getNome());
		stmt.setString(2, antimalware.getSoftware_house());
		stmt.setString(3, antimalware.getVersion());
		stmt.executeUpdate();

	    ResultSet rs = stmt.getGeneratedKeys();
        if (rs.next() )
        {	
        	int toRet = rs.getInt(1);
        	dbCon.close();
            return toRet;
        }
            
        // never reached
        dbCon.close();
		return -1;
	}
	
	public AntiMalware getAntiMalwareByName(String amName) throws SQLException
	{
		if(amName == null) throw new IllegalArgumentException();

		Connection dbCon = DriverManager.getConnection(DBConfiguration.DB_URL,DBConfiguration.USERNAME,DBConfiguration.PASSWORD);
		PreparedStatement stmt;
        ResultSet rs;
        
		String query = "SELECT * " +
				       "FROM anti_malware "  +
					   "WHERE nome = ? ";
		
		stmt = dbCon.prepareStatement(query);
		stmt.setString(1, amName);
		rs = stmt.executeQuery();
		
		if(rs.next())
		{	
		 AntiMalware am = new AntiMalware();
		 am.setId(rs.getInt(1));
		 am.setNome(rs.getString(2));
		 // these fields can be null
		 am.setSoftware_house(rs.getString(3));
		 am.setVersion(rs.getString(4));
		 
		 dbCon.close();
		 return am;
		}
		
		dbCon.close();
		return null;
	}
	
	public AntiMalware getAntiMalwareById(int id) throws SQLException
	{
		if(id <= 0) throw new IllegalArgumentException();

		Connection dbCon = DriverManager.getConnection(DBConfiguration.DB_URL,DBConfiguration.USERNAME,DBConfiguration.PASSWORD);
		Statement stmt;
        ResultSet rs;
        
		String query = "SELECT  * " +
				       "From anti_malware "  +
					   "WHERE  id = " + id;
		
		stmt = dbCon.createStatement();
		rs = stmt.executeQuery(query);
		
		if(rs.next())
		{	
		 AntiMalware am = new AntiMalware();
		 am.setId(rs.getInt(1));
		 am.setNome(rs.getString(2));
		 // these fields can be null
		 am.setSoftware_house(rs.getString(3));
		 am.setVersion(rs.getString(4));
		 
		 dbCon.close();
		 return am;
		}

		dbCon.close();
		return null;
	}
}
