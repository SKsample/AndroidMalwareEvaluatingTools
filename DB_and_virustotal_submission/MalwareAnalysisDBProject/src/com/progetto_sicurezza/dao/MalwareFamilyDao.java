package com.progetto_sicurezza.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import com.progetto_sicurezza.dbconfig.DBConfiguration;
import com.progetto_sicurezza.model.MalwareFamily;


public class MalwareFamilyDao
{
	/*
	 * malwareF: tutti i campi di malwareF possono essere null tranne:
	 * familyName
	 */
	public int insert(MalwareFamily malwareF) throws SQLException
	{
		// controlli:
		// riferimento not null
		// vincoli sui campi not null
		if(malwareF == null || malwareF.getFamilyName() == null) throw new IllegalArgumentException();

		Connection dbCon = DriverManager.getConnection(DBConfiguration.DB_URL,DBConfiguration.USERNAME,DBConfiguration.PASSWORD);
		PreparedStatement stmt;
		
        String insert = "INSERT INTO malware_family (family_name,family_description) " +
                        "VALUES (?,?);";
        
        System.out.println(insert);

        stmt = dbCon.prepareStatement(insert,Statement.RETURN_GENERATED_KEYS);
        stmt.setString(1,malwareF.getFamilyName());
        stmt.setString(2,malwareF.getFamilyDescription());
	    stmt.executeUpdate();
	    
	    ResultSet rs = stmt.getGeneratedKeys();
        if (rs.next() )
        {
        	int toRet = rs.getInt(1);
        	dbCon.close();
            return toRet;
        }

        // never reached
        dbCon.close();
		return -1;
	}
	
	public MalwareFamily getMalwareFamilyByName(String nome) throws SQLException
	{
		if(nome == null) throw new IllegalArgumentException();

		Connection dbCon = DriverManager.getConnection(DBConfiguration.DB_URL,DBConfiguration.USERNAME,DBConfiguration.PASSWORD);
		PreparedStatement stmt;
        ResultSet rs;
        
		String query = "SELECT  * " +
				       "From malware_family "  +
					   "WHERE  family_name = ? ";
		
		stmt = dbCon.prepareStatement(query);
		stmt.setString(1,nome);
		rs = stmt.executeQuery();
		
		if(rs.next())
		{	
		 MalwareFamily mf = new MalwareFamily();
		 mf.setId(rs.getInt(1));
		 mf.setFamily_name(rs.getString(2));
		 //
		 mf.setFamily_description(rs.getString(3));
		 
		 dbCon.close();
		 return mf;
		} 

		dbCon.close();
		return null;
	}
	
	public MalwareFamily getMalwareFamilyById(int id ) throws SQLException
	{
		if(id <= 0) throw new IllegalArgumentException();

		Connection dbCon = DriverManager.getConnection(DBConfiguration.DB_URL,DBConfiguration.USERNAME,DBConfiguration.PASSWORD);
		Statement stmt;
        ResultSet rs;
        
		String query = "SELECT  * " +
				       "FROM malware_family "  +
					   "WHERE  id = " + id;
		
		stmt = dbCon.createStatement();
		rs = stmt.executeQuery(query);

		if(rs.next())
		{	
		 MalwareFamily mf = new MalwareFamily();
		 mf.setId(rs.getInt(1));
		 mf.setFamily_name(rs.getString(2));
		 //
		 mf.setFamily_description(rs.getString(3));
		 
		 dbCon.close();
		 return mf;
		} 

		dbCon.close();
		return null;
	}
}
