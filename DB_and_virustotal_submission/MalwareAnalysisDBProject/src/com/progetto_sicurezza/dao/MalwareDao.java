package com.progetto_sicurezza.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;


import com.progetto_sicurezza.dbconfig.DBConfiguration;
import com.progetto_sicurezza.model.Malware;


public class MalwareDao
{
	/*
	 * malware: tutti i campi di malware possono essere null tranne:
	 * malwareStrId
	 */
	public int insert(Malware malware) throws SQLException
	{
		// controlli:
		// riferimento not null
		// vincoli sui campi not null
		if(malware == null || malware.getMalwareStrId() == null) throw new IllegalArgumentException();

		Connection dbCon = DriverManager.getConnection(DBConfiguration.DB_URL,DBConfiguration.USERNAME,DBConfiguration.PASSWORD);
		PreparedStatement stmt;
        
        String insert = "INSERT INTO malware (malware_str_id , dimension_kb , id_family , description ) " +
                        "VALUES (?," + 
                          			  malware.getKbDim() + "," +
                          			  malware.getIdFamily() + "," +"?);";
        
        System.out.println(insert);
      
        stmt = dbCon.prepareStatement(insert,Statement.RETURN_GENERATED_KEYS);
        stmt.setString(1,malware.getMalwareStrId());
        stmt.setString(2, malware.getDescr());
	    stmt.executeUpdate();

	    ResultSet rs = stmt.getGeneratedKeys();
        if (rs.next() )
        {
        	int toRet = rs.getInt(1);
        	dbCon.close();
            return toRet;
        }
        
        // never reached
        dbCon.close();
		return -1;
	}
	
	public Malware getMalwareByStrIdentifier(String strId) throws SQLException
	{
		if(strId == null) throw new IllegalArgumentException();

		Connection dbCon = DriverManager.getConnection(DBConfiguration.DB_URL,DBConfiguration.USERNAME,DBConfiguration.PASSWORD);
		PreparedStatement stmt;
        ResultSet rs;
        
		String query = "SELECT  *" +
				       "FROM malware "  +
					   "WHERE  malware_str_id = ?";
		
		stmt = dbCon.prepareStatement(query);
		stmt.setString(1, strId);
		rs = stmt.executeQuery();
		
		if(rs.next())
		{	
		 Malware m = new Malware();
		 m.setId(rs.getInt(1));
		 m.setMalwareStrId(rs.getString(2));

		 // these fields can be null
		 rs.getFloat(3);
		 if(!rs.wasNull())
		 m.setKbDim(rs.getFloat(3));
		 rs.getInt(4);
		 if(!rs.wasNull())
		 m.setIdFamily(rs.getInt(4));
		 m.setDescr(rs.getString(5));
		 
		 dbCon.close();
		 return m;
		} 

		dbCon.close();
		return null;
	}
	
	public Malware getMalwareById(int id) throws SQLException
	{
		if(id <= 0) throw new IllegalArgumentException();

		Connection dbCon = DriverManager.getConnection(DBConfiguration.DB_URL,DBConfiguration.USERNAME,DBConfiguration.PASSWORD);
		Statement stmt;
        ResultSet rs;
        
		String query = "SELECT  * " +
				       "FROM malware "  +
					   "WHERE  id = " + id;
		
		stmt = dbCon.createStatement();
		rs = stmt.executeQuery(query);
		
		if(rs.next())
		{	
		 Malware m = new Malware();
		 m.setId(rs.getInt(1));
		 m.setMalwareStrId(rs.getString(2));

		 // these fields can be null
		 rs.getFloat(3);
		 if(!rs.wasNull())
		 m.setKbDim(rs.getFloat(3));
		 rs.getInt(4);
		 if(!rs.wasNull())
		 m.setIdFamily(rs.getInt(4));
		 m.setDescr(rs.getString(5));
		 
		 dbCon.close();
		 return m;
		} 

		dbCon.close();
		return null;
	}
}
